{
  "extends": [
    "react-app",
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "plugins": ["prettier"],
  "parserOptions": {
    "sourceType": "module",
    "ecmaFeatures": { "jsx": true },
    "project": ["./tsconfig.json"]
  },
  "parser": "@typescript-eslint/parser",
  "rules": {
    // removing some annoying rules
    "react/prop-types": "off", // does not work for React.FC defined using an arrow function. See https://github.com/yannickcr/eslint-plugin-react/issues/2353
    "react/require-default-props": "off", // again, I am not sure I agree... sometimes it is useful to receive and undefined value
    "no-param-reassign": "off", // I am not sure I agree with this one.... redux actually supports mutating the state that is passed to an action for example
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "react/jsx-props-no-spreading": "off",
    "@typescript-eslint/no-throw-literal": "off",

    // updating how fucntion compnetents should be defined
    "react/function-component-definition": [
      2,
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],

    // some extra rules based upon good practices
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/consistent-type-assertions": ["error", { "assertionStyle": "never" }],
    "eqeqeq": ["error", "always"],
    "require-await": "error",
    "no-useless-catch": "error",
    "no-empty": "error",
    "no-await-in-loop": "error"
  },
  "overrides": [
    // turn off no-extraneous-dependencies, @typescript-eslint/consistent-type-assertions
    {
      "files": ["*.spec.*"],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "import/no-default-export": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/consistent-type-assertions": "off",
        "@typescript-eslint/ban-ts-comment": "off"
      }
    }
  ]
}
