{"version":3,"file":"component---src-pages-markdown-remark-frontmatter-slug-tsx-bca7c149dbed8cf68b68.js","mappings":"gKAsBA,UAnBuE,SAAC,GAElE,IACIA,EADJ,EADJC,KAEQD,eACR,GAAuB,OAAnBA,EACF,OAAO,KAET,IAAQE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACEC,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAKF,aAAL,EAAKA,EAAaG,OAClBD,EAAAA,cAAAA,KAAAA,KAAKF,aAAL,EAAKA,EAAaI,MAClBF,EAAAA,cAAAA,MAAAA,CAAKG,wBAAyB,CAAEC,OAAQL,GAAQ,OAbxD,C","sources":["webpack://mm-developer-portal-react/./src/pages/{markdownRemark.frontmatter__slug}.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nconst MarkdownTemplate: FC<PageProps<Queries.MarkdownTemplateQuery>> = ({\n  data, // this prop will be injected by the GraphQL query below.\n}) => {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  if (markdownRemark === null) {\n    return null;\n  }\n  const { frontmatter, html } = markdownRemark;\n  return (\n    <div>\n      <div>\n        <h1>{frontmatter?.title}</h1>\n        <h2>{frontmatter?.date}</h2>\n        <div dangerouslySetInnerHTML={{ __html: html || \"\" }} />\n      </div>\n    </div>\n  );\n};\n\nexport default MarkdownTemplate;\n\nexport const pageQuery = graphql`\n  query MarkdownTemplate($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n      }\n    }\n  }\n`;\n"],"names":["markdownRemark","data","frontmatter","html","React","title","date","dangerouslySetInnerHTML","__html"],"sourceRoot":""}