{"version":3,"file":"component---src-pages-discover-tsx-12a0d0293d13e305b2d8.js","mappings":"iMAmCA,IAvBkD,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,WACnD,OACEC,EAAAA,cAAAA,EAAAA,SAAAA,KACGD,EAAWE,KAAI,gBAASC,EAAT,EAAGC,KAAiBC,EAApB,EAAoBA,MAApB,OACdJ,EAAAA,cAAAA,EAAAA,EAAAA,CAAOK,GAAI,CAAEC,GAAI,IACdJ,GACCF,EAAAA,cAAAA,EAAAA,EAAAA,CAAYO,QAAQ,KAAKF,GAAI,CAAEC,GAAI,IAChCJ,GAGLF,EAAAA,cAAAA,EAAAA,GAAAA,CAAMQ,WAAS,EAACC,QAAS,GACtBL,EAAMH,KAAI,SAACS,GAAD,OACTV,EAAAA,cAAAA,EAAAA,GAAAA,CAAMW,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrBb,EAAAA,cAACc,EAAAA,EAASJ,GAFb,KARN,IAHP,C,6GCkCA,UAtC+D,SAAC,GAAqC,QAAvBK,EAAuB,EAAnCC,SAAYD,SAAYE,EAAW,EAAXA,KAEtFC,EAEED,EAFFC,kBACiBC,EACfF,EADFG,cAAiBD,SAGbE,EAAQH,EAAkBI,MAC7BrB,KAAI,SAACsB,GAAD,OAAUA,EAAKC,IADR,IAEXC,QAAO,SAACD,GAAD,YAAoC,cAA1B,UAAAA,EAAKE,cAAL,eAAaC,SAFnB,IAGX1B,KAAI,SAACuB,GAAD,kBAAW,CACdI,MAAK,oBAAEJ,EAAKK,mBAAP,aAAEC,EAAkBF,aAApB,QAA6B,GAClCG,KAAI,oBAAEP,EAAKE,cAAP,aAAEM,EAAaD,YAAf,QAAuB,GALjB,IAQRhC,EAAU,oBACdoB,EACGc,MAAK,SAACC,GAAD,MAAoC,aAAvBA,EAAQC,UAD7B,WADc,aACdC,EAEId,MAAMrB,KAAI,SAACsB,GAAD,OAAUA,EAAKC,IAF7B,IAGGvB,KAAI,SAACoC,GAAD,wBACAA,EADA,CAEHjC,MAAOiC,EAAMjC,MAAOH,KAAI,SAACS,GAAD,MAAW,CACjC4B,GAAIjB,EAAMY,MAAK,SAACM,GAAD,OAAUA,EAAKR,KAAKS,WAAVD,cAAkC7B,aAAlC,EAAkCA,EAAM+B,WAA7D,IAA4EV,KAChFH,MAAOlB,EAAMP,KACbuC,YAAahC,EAAMgC,YACnBC,MAAOjC,EAAMiC,MAAOC,gBAAiBC,gBAJhC,KALX,WADc,QAYL,GAEX,OACE7C,EAAAA,cAAC8C,EAAAA,EAAD,CAAoB/B,SAAUA,EAAUM,MAAOA,EAAO0B,aAAc,GAClE/C,EAAAA,cAAAA,EAAAA,EAAAA,CAAYO,QAAQ,KAAKF,GAAI,CAAEC,GAAI,IAAnC,YAGAN,EAAAA,cAACgD,EAAAA,EAAD,CAAiBjD,WAAYA,IAjCnC,EAyCO,IAAMkD,EAAe,kBAC1BjD,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAAA,YACAA,EAAAA,cAAAA,OAAAA,CAAMG,KAAK,cAAc+C,QAAQ,2DAH9B,C","sources":["webpack://mm-developer-portal-react/./src/components/GroupedCardView.tsx","webpack://mm-developer-portal-react/./src/pages/discover.tsx"],"sourcesContent":["import React, { PropsWithChildren, FC } from 'react'\nimport { Grid, Stack, Typography } from '@mui/material'\n\nimport Card, { CardProps } from './Card'\n\ninterface GroupedCardViewProps extends PropsWithChildren {\n  cardGroups: {\n    cards: CardProps[]\n    name: string | null\n  }[]\n}\n\nconst GroupedCardView: FC<GroupedCardViewProps> = ({ cardGroups }) => {\n  return (\n    <>\n      {cardGroups.map(({ name: groupName, cards }) => (\n        <Stack sx={{ mb: 4 }}>\n          {groupName && (\n            <Typography variant=\"h4\" sx={{ mb: 2 }}>\n              {groupName}\n            </Typography>\n          )}\n          <Grid container spacing={4}>\n            {cards.map((card) => (\n              <Grid item sm={12} md={6}>\n                <Card {...card} />\n              </Grid>\n            ))}\n          </Grid>\n        </Stack>\n      ))}\n    </>\n  )\n}\n\nexport default GroupedCardView\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { FC } from 'react'\nimport { graphql, HeadFC, PageProps } from 'gatsby'\nimport { Typography } from '@mui/material'\n\nimport ContentWithSidebar from '../components/ContentWithSidebar'\nimport GroupedcardView from '../components/GroupedCardView'\n\nconst DiscoverPage: FC<PageProps<Queries.DiscoverPageQuery>> = ({ location: { pathname }, data }) => {\n  const {\n    allMarkdownRemark,\n    allGroupsYaml: { sections },\n  } = data\n\n  const pages = allMarkdownRemark.edges\n    .map((edge) => edge.node)\n    .filter((node) => node.fields?.category === 'discover')\n    .map((node) => ({\n      title: node.frontmatter?.title ?? '',\n      slug: node.fields?.slug ?? '',\n    }))\n\n  const cardGroups =\n    sections\n      .find((section) => section.fieldValue === 'discover')\n      ?.edges.map((edge) => edge.node)\n      .map((group) => ({\n        ...group,\n        cards: group.cards!.map((card) => ({\n          to: pages.find((page) => page.slug.startsWith(`/discover/${card?.directory}`))!.slug,\n          title: card!.name!,\n          description: card!.description!,\n          image: card!.image!.childImageSharp!.gatsbyImageData,\n        })),\n      })) ?? []\n\n  return (\n    <ContentWithSidebar pathname={pathname} pages={pages} levelsToSkip={1}>\n      <Typography variant=\"h3\" sx={{ mb: 4 }}>\n        Discover\n      </Typography>\n      <GroupedcardView cardGroups={cardGroups} />\n    </ContentWithSidebar>\n  )\n}\n\nexport default DiscoverPage\n\n// TODO: add more for SEO\nexport const Head: HeadFC = () => (\n  <>\n    <title>Discover</title>\n    <meta name=\"description\" content=\"Be inspired by amazing use cases of our Moata products\" />\n  </>\n)\n\nexport const pageQuery = graphql`\n  query DiscoverPage {\n    allMarkdownRemark(sort: { fields: [fields___sortPriority], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n            category\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n    allGroupsYaml {\n      sections: group(field: fields___category) {\n        edges {\n          node {\n            name\n            cards {\n              description\n              directory\n              name\n              image {\n                childImageSharp {\n                  gatsbyImageData(layout: CONSTRAINED)\n                }\n              }\n            }\n          }\n        }\n        fieldValue\n      }\n    }\n  }\n`\n"],"names":["cardGroups","React","map","groupName","name","cards","sx","mb","variant","container","spacing","card","item","sm","md","Card","pathname","location","data","allMarkdownRemark","sections","allGroupsYaml","pages","edges","edge","node","filter","fields","category","title","frontmatter","_node$frontmatter","slug","_node$fields2","find","section","fieldValue","_sections$find","group","to","page","startsWith","directory","description","image","childImageSharp","gatsbyImageData","ContentWithSidebar","levelsToSkip","GroupedcardView","Head","content"],"sourceRoot":""}